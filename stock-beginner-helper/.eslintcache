[{"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/organisms/CompanyItemList.tsx":"1","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/pages/BasedTemplate/templates/index.tsx":"2","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/index.tsx":"3","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/organisms/CompanyItem.tsx":"4","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/styles/color.ts":"5","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/libs/api/index.tsx":"6","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/molecules/LabelGroup.tsx":"7","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/atoms/Label.tsx":"8","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/atoms/StocksInfo.tsx":"9","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/libs/api/repository.ts":"10","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/libs/hooks/useRequest.tsx":"11","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/pages/BasedTemplate/templates/style.ts":"12","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/reportWebVitals.ts":"13","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/App.tsx":"14","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/pages/ChartTemplate.tsx":"15","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/atoms/Chart.tsx":"16","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/atoms/Loading.tsx":"17","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/atoms/ChartDateFilter.tsx":"18","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/molecules/ChartDateFilterGroup.tsx":"19","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/pages/NewsTemplate.tsx":"20","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/atoms/Input.tsx":"21","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/organisms/NewsItemList.tsx":"22","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/molecules/NewsItem.tsx":"23"},{"size":832,"mtime":1617346127264,"results":"24","hashOfConfig":"25"},{"size":1824,"mtime":1617460061443,"results":"26","hashOfConfig":"25"},{"size":796,"mtime":1617463572306,"results":"27","hashOfConfig":"25"},{"size":1019,"mtime":1617285160044,"results":"28","hashOfConfig":"25"},{"size":201,"mtime":1616323392279,"results":"29","hashOfConfig":"25"},{"size":328,"mtime":1616313183013,"results":"30","hashOfConfig":"25"},{"size":1281,"mtime":1617343076560,"results":"31","hashOfConfig":"25"},{"size":586,"mtime":1617286022619,"results":"32","hashOfConfig":"25"},{"size":701,"mtime":1617319292550,"results":"33","hashOfConfig":"25"},{"size":1039,"mtime":1617462312809,"results":"34","hashOfConfig":"25"},{"size":729,"mtime":1616569491984,"results":"35","hashOfConfig":"25"},{"size":1621,"mtime":1617463939917,"results":"36","hashOfConfig":"25"},{"size":425,"mtime":1611930224948,"results":"37","hashOfConfig":"25"},{"size":322,"mtime":1612023898693,"results":"38","hashOfConfig":"25"},{"size":2766,"mtime":1617461823294,"results":"39","hashOfConfig":"25"},{"size":3660,"mtime":1617461852104,"results":"40","hashOfConfig":"25"},{"size":524,"mtime":1617289572642,"results":"41","hashOfConfig":"25"},{"size":1818,"mtime":1617421719386,"results":"42","hashOfConfig":"25"},{"size":1493,"mtime":1617329266795,"results":"43","hashOfConfig":"25"},{"size":1138,"mtime":1617463852782,"results":"44","hashOfConfig":"25"},{"size":599,"mtime":1617347768076,"results":"45","hashOfConfig":"25"},{"size":683,"mtime":1617422252778,"results":"46","hashOfConfig":"25"},{"size":1745,"mtime":1617463266511,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"51"},"ocwal2",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"51"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"56"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"89"},"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/organisms/CompanyItemList.tsx",["106"],"import React from 'react';\nimport styled from 'styled-components';\nimport { QuoteResponseItem, QuoteResponseType } from 'types';\nimport CompanyItem from './CompanyItem';\n\nconst CompanyItemListWrap = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n`;\n\ntype Props = {\n    itemListData: Array<any>;\n    handleCompanyInfo: (symbol: string, fullName: string) => void;\n}\n\nfunction CompanyItemList({ itemListData, handleCompanyInfo}: Props) {\n    return (\n        <CompanyItemListWrap>\n            {\n                itemListData.map((item: QuoteResponseItem) => {\n                    return <CompanyItem key={item.symbol} item={item} handleCompanyInfo={handleCompanyInfo} />;\n                })\n            }\n        </CompanyItemListWrap>\n    );\n}\n\nexport default React.memo(CompanyItemList);",["107","108"],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/pages/BasedTemplate/templates/index.tsx",[],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/index.tsx",[],["109","110"],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/organisms/CompanyItem.tsx",["111"],"import DirectionGroup from 'components/molecules/DirectionGroup';\nimport LabelGroup from 'components/molecules/LabelGroup';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { color } from 'styles/color';\nimport { QuoteResponseItem } from 'types';\n\nconst CompanyItemWrap = styled.div`\n    display: flex;\n    direction: row;\n    /* justify-content: space-between; */\n    width: 100%;\n    height: 5rem;\n    border-bottom: 1px solid ${color.middle_gray};\n    cursor: pointer;\n\n`;\n\ntype Props = {\n    item: QuoteResponseItem;\n    handleCompanyInfo: (symbol: string, fullName: string) => void;\n}\n\nfunction CompanyItem({ item, handleCompanyInfo }: Props) {\n\n    return (\n        <CompanyItemWrap onClick={() => handleCompanyInfo(item.symbol, item.longName)}>\n            <LabelGroup CompanyCode={item.symbol} CompanyFullName={item.longName} />\n            {\n                // data ? <DirectionGroup data={data}/> : <></>\n            }\n        </CompanyItemWrap>\n    );\n}\n\nexport default CompanyItem;\n","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/styles/color.ts",[],["112","113"],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/libs/api/index.tsx",[],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/molecules/LabelGroup.tsx",[],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/atoms/Label.tsx",[],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/atoms/StocksInfo.tsx",[],["114","115"],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/libs/api/repository.ts",[],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/libs/hooks/useRequest.tsx",[],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/pages/BasedTemplate/templates/style.ts",[],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/reportWebVitals.ts",[],["116","117"],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/App.tsx",[],["118","119"],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/pages/ChartTemplate.tsx",["120"],"import Chart from 'components/atoms/Chart';\nimport Loading from 'components/atoms/Loading';\nimport ChartDateFilterGroup from 'components/molecules/ChartDateFilterGroup';\nimport LabelGroup from 'components/molecules/LabelGroup';\nimport { requestGetChart } from 'libs/api/repository';\nimport useRequest from 'libs/hooks/useRequest';\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nconst CompanyChartTemplate = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 75%;\n    height: 100%;\n`;\n\nconst Head = styled.div`\n    height: 3rem;\n    margin-top: 2rem;\n`;\n\nconst Body = styled.div`\n    width: 100%;\n    min-height: 40rem;\n`;\n\ntype Props = {\n    symbol: string;\n    fullName: string;\n}\n\nfunction ChartTemplate({ fullName, symbol }: Props) {\n    const [onRequestGetChart, chartData, isLoading, ] = useRequest(requestGetChart);\n    const [chartDataList, setChartDataList] = useState([]);\n    const [date, setDate] = useState('1d');\n\n    const handleChartDate = (date: string) => {\n        setDate(date);\n    };\n\n    useEffect(() => {\n\n        if (!chartData && symbol) {\n            const req = {\n                symbol,\n                range: '1d'\n            };\n    \n            onRequestGetChart(req);\n        }\n\n        if (chartData) {\n            setChartDataList(chartData.data.chart.result[0].indicators.quote[0].open);\n        }\n        \n\n    }, [symbol, chartData, onRequestGetChart]);\n\n    useEffect(() => {\n        \n        if (symbol) {\n            let req;\n\n            if (date === '1mo' || date === '3mo' || date === '6mo' || date === '1y' || date === '2y' || date === '5y' || date === '10y') {\n                req = {\n                    interval: '1d',\n                    symbol,\n                    range: date\n                };   \n            } else {\n                req = {\n                    interval: '5m',\n                    symbol,\n                    range: date\n                };\n            }\n    \n            onRequestGetChart(req);\n        }\n\n        if (chartData) {\n            setChartDataList(chartData.data.chart.result[0].indicators.quote[0].open);\n        }\n    }, [symbol, date]);\n\n    return (\n        <CompanyChartTemplate>\n            <Head>\n                <LabelGroup CompanyCode={symbol} CompanyFullName={fullName} type={'title'} />\n            </Head>\n            <Body>\n                {\n                    isLoading ? <Loading /> :  \n                    <>\n                        <ChartDateFilterGroup onClick={handleChartDate} date={date} />\n                        <Chart chartData={chartDataList} date={date}/>\n                    </>\n                }\n            </Body>\n    \n        </CompanyChartTemplate>\n    );\n}\n\nexport default ChartTemplate;","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/atoms/Chart.tsx",[],["121","122"],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/atoms/Loading.tsx",[],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/atoms/ChartDateFilter.tsx",[],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/molecules/ChartDateFilterGroup.tsx",["123"],"import ChartDateFilter from 'components/atoms/ChartDateFilter';\nimport StocksInfo from 'components/atoms/StocksInfo';\nimport React from 'react';\nimport styled from 'styled-components';\n\n\nconst ChartDateFilterGroupWrap = styled.div`\n    display: flex;\n    justify-content: space-around;\n    width: 100%;\n    margin: 2rem 0;\n\n    & > *{\n        margin-right: 1rem;\n    }\n`;\n\ntype Props = {\n    onClick: (params?: any) => void;\n    date: string;\n}\n\nfunction ChartDateFilterGroup({ onClick, date}: Props) {\n    return (\n        <ChartDateFilterGroupWrap>\n            <ChartDateFilter onClick={onClick} value={'1d'} date={date}>1일</ChartDateFilter>\n            <ChartDateFilter onClick={onClick} value={'5d'} date={date}>1주</ChartDateFilter>\n            <ChartDateFilter onClick={onClick} value={'1mo'} date={date}>1달</ChartDateFilter>\n            <ChartDateFilter onClick={onClick} value={'3mo'} date={date}>3달</ChartDateFilter>\n            <ChartDateFilter onClick={onClick} value={'6mo'} date={date}>6달</ChartDateFilter>\n            <ChartDateFilter onClick={onClick} value={'1y'} date={date}>1년</ChartDateFilter>\n            <ChartDateFilter onClick={onClick} value={'2y'} date={date}>2년</ChartDateFilter>\n            <ChartDateFilter onClick={onClick} value={'5y'} date={date}>5년</ChartDateFilter>\n            <ChartDateFilter onClick={onClick} value={'10y'} date={date}>10년</ChartDateFilter>\n        </ChartDateFilterGroupWrap>\n    );\n}\n\nexport default ChartDateFilterGroup;","/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/pages/NewsTemplate.tsx",["124"],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/atoms/Input.tsx",[],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/organisms/NewsItemList.tsx",[],"/Users/steve/Documents/GitHub/stock-beginner-helper/stock-beginner-helper/src/components/molecules/NewsItem.tsx",["125","126","127","128","129","130","131","132","133","134","135","136"],"import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components'; \nimport dayjs from 'dayjs';\nimport { color } from 'styles/color';\nimport { requestGetNewsDetail } from 'libs/api/repository';\nimport { NewsItemType } from 'types';\nimport useRequest from 'libs/hooks/useRequest';\n\nconst NewsItemTemplate = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 20rem;\n    height: 6rem;\n    overflow: hidden;\n\n    /* border: 1px solid white; */\n\n    cursor: pointer;\n`;\n\nconst Title = styled.div`\n    width: 100%;\n    margin-bottom: 0.5rem;\n    font-size: 0.8rem;\n    color: ${color.light_gray};\n`;\n\nconst Head = styled.div`\n    width: 100%;\n    font-size: 0.8rem;\n    font-weight: 800;\n    color: white;\n`;\n\nconst Body = styled.div`\n    width: 100%;\n    margin-top: 0.5rem;\n    font-size: 0.8rem;\n    color: ${color.light_gray};\n\n`;\n\ntype Props = {\n    newsItem: NewsItemType;\n}\n\nfunction NewsItem({ newsItem }: Props) {\n    const { link, publisher, title, providerPublishTime, uuid } = newsItem;\n    const [contents, setContents] = useState('');\n    const [onRequestGetNews, newsData, , ] = useRequest(requestGetNewsDetail);\n    const [date, setDate] = useState() as any;\n\n    // const linkToNewsPage = useCallback(() => {\n\n    // }, []);\n    \n    useEffect(() => {\n        if (newsItem) {\n            console.log(providerPublishTime);\n            const date = new Date(providerPublishTime);\n            console.log(date);\n        }\n    }, [newsItem]);\n\n    return (\n        <NewsItemTemplate>\n            <Title>{publisher}</Title>\n            <Head>{title}</Head>\n            {/* {date ? date.format('YYYY-MM-DD') : <></>} */}\n        </NewsItemTemplate>\n    );\n}\n\nexport default NewsItem;\n",{"ruleId":"137","severity":1,"message":"138","line":3,"column":29,"nodeType":"139","messageId":"140","endLine":3,"endColumn":46},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"141","replacedBy":"145"},{"ruleId":"143","replacedBy":"146"},{"ruleId":"137","severity":1,"message":"147","line":1,"column":8,"nodeType":"139","messageId":"140","endLine":1,"endColumn":22},{"ruleId":"141","replacedBy":"148"},{"ruleId":"143","replacedBy":"149"},{"ruleId":"141","replacedBy":"150"},{"ruleId":"143","replacedBy":"151"},{"ruleId":"141","replacedBy":"152"},{"ruleId":"143","replacedBy":"153"},{"ruleId":"141","replacedBy":"154"},{"ruleId":"143","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":84,"column":8,"nodeType":"158","endLine":84,"endColumn":22,"suggestions":"159"},{"ruleId":"141","replacedBy":"160"},{"ruleId":"143","replacedBy":"161"},{"ruleId":"137","severity":1,"message":"162","line":2,"column":8,"nodeType":"139","messageId":"140","endLine":2,"endColumn":18},{"ruleId":"156","severity":1,"message":"163","line":33,"column":8,"nodeType":"158","endLine":33,"endColumn":16,"suggestions":"164"},{"ruleId":"137","severity":1,"message":"165","line":1,"column":17,"nodeType":"139","messageId":"140","endLine":1,"endColumn":28},{"ruleId":"137","severity":1,"message":"166","line":3,"column":8,"nodeType":"139","messageId":"140","endLine":3,"endColumn":13},{"ruleId":"137","severity":1,"message":"167","line":35,"column":7,"nodeType":"139","messageId":"140","endLine":35,"endColumn":11},{"ruleId":"137","severity":1,"message":"168","line":48,"column":13,"nodeType":"139","messageId":"140","endLine":48,"endColumn":17},{"ruleId":"137","severity":1,"message":"169","line":48,"column":58,"nodeType":"139","messageId":"140","endLine":48,"endColumn":62},{"ruleId":"137","severity":1,"message":"170","line":49,"column":12,"nodeType":"139","messageId":"140","endLine":49,"endColumn":20},{"ruleId":"137","severity":1,"message":"171","line":49,"column":22,"nodeType":"139","messageId":"140","endLine":49,"endColumn":33},{"ruleId":"137","severity":1,"message":"172","line":50,"column":12,"nodeType":"139","messageId":"140","endLine":50,"endColumn":28},{"ruleId":"137","severity":1,"message":"173","line":50,"column":30,"nodeType":"139","messageId":"140","endLine":50,"endColumn":38},{"ruleId":"137","severity":1,"message":"174","line":51,"column":12,"nodeType":"139","messageId":"140","endLine":51,"endColumn":16},{"ruleId":"137","severity":1,"message":"175","line":51,"column":18,"nodeType":"139","messageId":"140","endLine":51,"endColumn":25},{"ruleId":"156","severity":1,"message":"176","line":63,"column":8,"nodeType":"158","endLine":63,"endColumn":18,"suggestions":"177"},"@typescript-eslint/no-unused-vars","'QuoteResponseType' is defined but never used.","Identifier","unusedVar","no-native-reassign",["178"],"no-negated-in-lhs",["179"],["178"],["179"],"'DirectionGroup' is defined but never used.",["178"],["179"],["178"],["179"],["178"],["179"],["178"],["179"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chartData' and 'onRequestGetChart'. Either include them or remove the dependency array.","ArrayExpression",["180"],["178"],["179"],"'StocksInfo' is defined but never used.","React Hook useEffect has a missing dependency: 'onRequestGetQuotes'. Either include it or remove the dependency array.",["181"],"'useCallback' is defined but never used.","'dayjs' is defined but never used.","'Body' is assigned a value but never used.","'link' is assigned a value but never used.","'uuid' is assigned a value but never used.","'contents' is assigned a value but never used.","'setContents' is assigned a value but never used.","'onRequestGetNews' is assigned a value but never used.","'newsData' is assigned a value but never used.","'date' is assigned a value but never used.","'setDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'providerPublishTime'. Either include it or remove the dependency array.",["182"],"no-global-assign","no-unsafe-negation",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [symbol, date, chartData, onRequestGetChart]",{"range":"189","text":"190"},"Update the dependencies array to be: [onRequestGetQuotes, symbol]",{"range":"191","text":"192"},"Update the dependencies array to be: [newsItem, providerPublishTime]",{"range":"193","text":"194"},[2167,2181],"[symbol, date, chartData, onRequestGetChart]",[837,845],"[onRequestGetQuotes, symbol]",[1493,1503],"[newsItem, providerPublishTime]"]